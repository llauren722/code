import numpy as np

def create_evens(n):
    """
    Examples:
    create_evens(3) ->
    [[2, 4, 6],
    [2, 4, 6], 
    [2, 4, 6]]

    create_evens(4) ->
    [[2, 4, 6, 8],
    [2, 4, 6, 8], 
    [2, 4, 6, 8],
    [2, 4, 6, 8]]
    """
    pass # TODO: Your code here (1-5 lines)

def mix(x, y):
    """
    Given two 2d nparrays, both of shape (n, m), where m is even,
    return an (n, m) 2d nparray where the left m/2 columns are the
    left m/2 columns of x, and the right m/2 columns are the right m/2
    columns of y.

    Example:
    x = [[1, 2, 3, 4]
         [5, 6, 7, 8]]
    y = [[9, 10, 11, 12],
         [13, 14, 15, 16]]

    mix(x, y) ->
    [[1, 2, 11, 12],
    [5, 6, 15, 16]]
    """
    pass # TODO: Your code here (1-5 lines)

def create_box(n, m):
    """
    Create a n x m box, where the border is all 
    1's, and the value of the nonborder elements (if any) are
    all set to the total number of nonborder elements. 

    create_box(3,4) ->
    [[1, 1, 1, 1],
    [1, 2, 2, 1], 
    [1, 1, 1, 1]]

    create_box(3,5) ->
    [[1, 1, 1, 1, 1],
    [1, 3, 3, 3, 1], 
    [1, 1, 1, 1, 1]]

    create_box(5,5) ->
    [[1, 1, 1, 1, 1],
    [1, 9, 9, 9, 1], 
    [1, 9, 9, 9, 1]
    [1, 9, 9, 9, 1]
    [1, 1, 1, 1, 1]]

    create_box(2,2) ->
    [[1, 1],
    [1, 1]] 
    """
    pass # TODO: Your code here (~3-8 lines)

def weird_op(x, y):
    """
    Given two np arrays x and y with the same number of elements,
    but not necessarily the same shape, reshape them and then add them. 
    Then, return their sum in a 1-D array in reverse sorted order.
    """
    pass # TODO: Your code here (1-5 lines)

def axis_test(x):
    """
    Given a 2d nparray x, find the mean in each column. Then, return
    the maximum mean. 

    x = [[1, 2, 3, 4],
         [5, 6, 7, 8]]

    column means: [3, 4, 5, 6]
    return maximum mean: 6
    """
    pass # TODO: Your code here (1-5 lines)

if __name__ == '__main__':
    print("create_evens")
    print(create_evens(4))

    print("mix")
    x = np.arange(1, 9).reshape((2, 4))
    y = np.arange(9, 17).reshape((2, 4))
    print(mix(x, y))

    print("create_box")
    print(create_box(4,5))

    print("weird_op")
    x = np.arange(12).reshape((3,4))
    y = np.arange(0, 120, 10).reshape((6,2))
    print(weird_op(x,y))

    print("axis_test")
    x = np.arange(1, 9).reshape((2, 4))
    print(axis_test(x))
   
